from flask import Flask, request
import vk_api
import json
from rapidfuzz import fuzz

app = Flask(__name__)

TOKEN = "vk1.a.pHrouDYDYTT_kZ-PZ4IAxZEAALVGs2I_wciv8DSnN2LVsUR8epKl0Mg6DYaBGrh9iSuKs61nY4pQETpss3HDlmd8xKCmj3aDp2jolkI7W09i6D-2lEHQxudYaHpmuZ0xyFHHCImX2838UX67vFiqedj3VmlHIiKZsGcPabpebnphmH3yBJ8mkiM_BGUDNEx7Akl0QvEgFQdU9TXjiyXpEQ"
CONFIRMATION_TOKEN = "2262c629"

vk_session = vk_api.VkApi(token=TOKEN)
vk = vk_session.get_api()

with open("faq.json", "r", encoding="utf-8") as f:
    faq = json.load(f)

curse_words = ["–ø–∏–∑–¥–∞", "–±–ª—è", "—Ö—É–π", "–ø–∏–∑–¥–µ—Ü", "—Ö—É–µ", "–µ–±–∞—Ç—å", "–µ–±–∞–ª", "–µ–±–ª"]
look_like_curse_but_not_one = ["–æ—Å–∫–æ—Ä–±–ª—è—Ç—å", "–ø–æ—Ç—Ä–µ–±–ª—è—Ç—å", "—É–ø–æ—Ç—Ä–µ–±–ª—è—Ç—å", "—Å–∞–±–ª—è", "–∫–æ–ª–µ–±–ª—é—Ç—Å—è", "–∫–æ–ª–µ–±–ª–µ—Ç–µ—Å—å",
                               "–∫–æ–ª–µ–±–ª–µ—Ç—Å—è", "–∑–∞—Å—Ç—Ä–∞—Ö—É–π", "–ø–æ–¥—Å—Ç—Ä–∞—Ö—É–π", "—Å—Ç—Ä–∞—Ö—É–π"]

keyboard = {
    "one_time": False,
    "buttons": [
        [
            {"action": {"type": "text", "label": "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ"}, "color": "primary"},
            {"action": {"type": "text", "label": "–ó–∞–Ω—è—Ç–∏—è"}, "color": "primary"},
            {"action": {"type": "text", "label": "–ü—Ä–æ–µ–∫—Ç—ã"}, "color": "primary"},
        ],
        [
            {"action": {"type": "text", "label": "–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã"}, "color": "secondary"},
            {"action": {"type": "text", "label": "–°–≤—è–∑–∞—Ç—å—Å—è"}, "color": "secondary"},
        ]
    ]
}


def watch_manners(message_text):
    for ex in look_like_curse_but_not_one:
        if ex in message_text:
            return False

    return any(word in message_text for word in curse_words)


def search_faq(text, short=False):
    highest_score = 0
    best_entry = None

    for question, entry in faq.items():
        score = fuzz.partial_ratio(text, question)
        if score > highest_score:
            highest_score = score
            best_entry = entry

    if highest_score > 80 and best_entry:
        if short and best_entry.get("type") == "yesno":
            return best_entry.get("short")
        return best_entry.get("answer")

    return None


@app.route('/', methods=['POST'])
def callback():
    data = request.json

    if data['type'] == 'confirmation':
        return CONFIRMATION_TOKEN

    if data['type'] == 'message_new':
        user_id = data['object']['message']['from_id']
        text = data['object']['message']['text'].lower()

        if watch_manners(text):
            vk.messages.send(
                user_id=user_id,
                message="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π –Ω–µ–Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—É—é –ª–µ–∫—Å–∏–∫—É.",
                random_id=0
            )
            return "ok"

        faq_short_answer = search_faq(text, short=True)
        if faq_short_answer:
            vk.messages.send(
                user_id=user_id,
                message=faq_short_answer,
                random_id=0
            )
            return "ok"

        faq_answer = search_faq(text)
        if faq_answer:
            vk.messages.send(
                user_id=user_id,
                message=faq_answer,
                random_id=0
            )
            return "ok"

        if text == "/start":
            vk.messages.send(
                user_id=user_id,
                message="–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç VK Education. –í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:",
                random_id=0,
                keyboard=json.dumps(keyboard)
            )
        elif text == "/help":
            help_message = (
                "–°–ø—Ä–∞–≤–∫–∞:\n\n"
                "/start ‚Äî –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n"
                "/help ‚Äî —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥\n\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –∏–ª–∏ –∑–∞–¥–∞–π –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:\n"
                "¬´–ö–∞–∫ –ø–æ–ø–∞—Å—Ç—å –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É¬ª, ¬´–ú–æ–∂–Ω–æ –ª–∏ —Å–æ–≤–º–µ—â–∞—Ç—å —Ä–∞–±–æ—Ç—É¬ª, –∏ —Ç.–¥."
            )
            vk.messages.send(
                user_id=user_id,
                message=help_message,
                random_id=0
            )
        elif text == "/faq" or text == "—á–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã":
            questions = "\n".join([f"‚Ä¢ {q}" for q in list(faq.keys())[:10]])
            vk.messages.send(
                user_id=user_id,
                message=f"üîé –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã:\n\n{questions}\n\n–¢—ã –º–æ–∂–µ—à—å –∑–∞–¥–∞—Ç—å –ª—é–±–æ–π –∏–∑ –Ω–∏—Ö",
                random_id=0
            )
            return "ok"
        elif "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ" in text:
            vk.messages.send(
                user_id=user_id,
                message="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –∑–¥–µ—Å—å: https://edu.vk.com/schedule",
                random_id=0
            )
        elif "–∑–∞–Ω—è—Ç–∏—è" in text:
            vk.messages.send(
                user_id=user_id,
                message="–ó–∞–Ω—è—Ç–∏—è –ø—Ä–æ–≤–æ–¥—è—Ç—Å—è —Ä–µ–≥—É–ª—è—Ä–Ω–æ –æ–Ω–ª–∞–π–Ω. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –∞–Ω–æ–Ω—Å–∞–º–∏ –Ω–∞ —Å–∞–π—Ç–µ VK Education.",
                random_id=0
            )
        elif "–ø—Ä–æ–µ–∫—Ç" in text:
            vk.messages.send(
                user_id=user_id,
                message="–í—Å–µ –ø—Ä–æ–µ–∫—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ —Å—Å—ã–ª–∫–µ: https://edu.vk.com/projects",
                random_id=0
            )
        elif "–∫–æ–Ω—Ç–∞–∫—Ç" in text:
            vk.messages.send(
                user_id=user_id,
                message="–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É –Ω–∞ —Å–∞–π—Ç–µ VK Education –∏–ª–∏ –ø–æ email: support@edu.vk.com",
                random_id=0
            )
        elif "–∫–∞–∫ –ø–æ–ø–∞—Å—Ç—å" in text or "–æ—Ç–±–æ—Ä" in text:
            vk.messages.send(
                user_id=user_id,
                message="–ß—Ç–æ–±—ã –ø–æ–ø–∞—Å—Ç—å –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É, –Ω—É–∂–Ω–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É –∏ –ø—Ä–æ–π—Ç–∏ –æ—Ç–±–æ—Ä.",
                random_id=0
            )
        else:
            vk.messages.send(
                user_id=user_id,
                message="–Ø –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞—é –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å. –ü–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –Ω–∞–ø–∏—à–∏ /start, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã.",
                random_id=0
            )

    return "ok"


if __name__ == '__main__':
    app.run(host='0.0.0.0', port=10000)
